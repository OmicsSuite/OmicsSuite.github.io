import{_ as f,A as b,a as v}from"./index-85b6e0f6.js";import{ah as a,o as y,c as w,V as i,P as s,a as e,ax as x,ay as S,T as r}from"./@vue-248d724b.js";import"./vue-router-401d444e.js";import"./element-plus-bab1278a.js";import"./lodash-es-21c98b27.js";import"./@vueuse-89fc2c2e.js";import"./@element-plus-0de4ac96.js";import"./@popperjs-c75af06c.js";import"./@ctrl-f8748455.js";import"./dayjs-5c34775c.js";import"./async-validator-dee29e8b.js";import"./memoize-one-297ddbcb.js";import"./escape-html-64fe8e16.js";import"./normalize-wheel-es-ed76fb12.js";import"./@floating-ui-72671fae.js";import"./echarts-9ae96183.js";import"./zrender-e9104294.js";const O={components:{AppHeader:b,AppFooter:v},data(){return{}},mounted(){},methods:{downloadOmicsSuite(){const n="https://sourceforge.net/projects/omicssuite-github-io/files/latest/download";window.open(n,"_blank")}}},t=n=>(x("data-v-09bf523c"),n=n(),S(),n),k={class:"common-layout"},A={class:"page"},C=t(()=>e("br",null,null,-1)),T=t(()=>e("p",{style:{"font-size":"1.2em","font-weight":"bold",color:"#008888","text-align":"justify"}}," OmicsSuite: a customized and pipelined suite for analysis and visualization of multi-omics big data. ",-1)),F=t(()=>e("br",null,null,-1)),z=t(()=>e("div",{class:"image-text-card"},[e("p",{class:"card-title"},"Abstract:"),e("p",{class:"card-content"}," With the advancements in high-throughput sequencing technologies such as Illumina, PacBio, and 10X Genomics platforms, and gas/liquid chromatography-mass spectrometry, large volumes of biological data in multiple formats can now be obtained through multi-omics analysis. Bioinformatics is constantly evolving and seeking breakthroughs to solve multi-omics problems, however it is challenging for most experimental biologists to analyze data using command-line interfaces, coding, and scripting. Based on experience with multi-omics, we have developed OmicsSuite, a desktop suite that comprehensively integrates statistics and multi-omics analysis and visualization. The suite has 175 sub-applications in 12 categories, including Sequence, Statistics, Algorithm, Genomics, Transcriptomics, Enrichment, Proteomics, Metabolomics, Clinical, Microorganism, Single Cell, and Table Operation. We created the user interface with Sequence View, Table View, and intelligent components based on JavaFX and the popular Shiny framework. The multi-omics analysis functions were developed based on BioJava and 300+ packages provided by the R CRAN and Bioconductor communities, and it encompasses over 3,000 adjustable parameter interfaces. OmicsSuite can directly read multi-omics raw data in FastA, FastQ, MAF, mzML, Matrix, and HDF5 formats, and the programs emphasize data transfer directions and pipeline analysis functions. OmicsSuite can produce pre-publication images and tables, allowing users to focus on biological aspects. OmicsSuite offers multi-omics step-by-step workflows that can be easily applied to horticultural plant breeding and molecular mechanism studies in plants. It enables researchers to freely explore the molecular information contained in multi-omics big data (Source: https://github.com/OmicsSuite/, Website: https://omicssuite.github.io, v1.3.9). ")],-1)),G=t(()=>e("br",null,null,-1)),j=t(()=>e("p",{style:{"font-size":"1.2em","font-weight":"bold","text-align":"justify"}},[r("Ben-ben Miao, Wei Dong, Yi-xin Gu, Zhao-fang Han, Xuan Luo, Cai-huan Ke, Wei-wei You, OmicsSuite: a customized and pipelined suite for analysis and visualization of multi-omics big data, "),e("i",null,"Horticulture Research"),r(", 2023;, uhad195, "),e("a",{href:"https://doi.org/10.1093/hr/uhad195",target:"_blank",style:{color:"#008888"}},"https://doi.org/10.1093/hr/uhad195"),r(". ")],-1)),M=t(()=>e("br",null,null,-1)),P=t(()=>e("p",{style:{"font-size":"2em","font-weight":"bold",color:"#000000"}}," Results: ",-1)),B={class:"image-text-card"},I=t(()=>e("p",{class:"card-title"},"1. OmicsSuite Architecture:",-1)),V=t(()=>e("p",{class:"card-content"}," OmicsSuite is an innovative framework for analyzing and visualizing multi-omics data in a workflow. The JavaFX library provides user interface (UI) control methods, parameter component classes, web engine support, and other interface display and friendly interaction functions through a series of sub-libraries such as javafx-controls, javafx-graphics, and javafx-web. ",-1)),R=t(()=>e("img",{src:"https://benben-miao.gitee.io/image-cloud/OmicsSuite/Paper-Figure1.jpg",style:{width:"100%","aspect-ratio":"true","border-radius":"10px"}},null,-1)),W=t(()=>e("br",null,null,-1)),q={class:"image-text-card"},H=t(()=>e("p",{class:"card-title"},"2. User Interface:",-1)),X=t(()=>e("p",{class:"card-content"}," OmicsSuite has redesigned the UI of JavaFX to provide a modern and improved operating experience for users. The default layout features a multi-level menu bar at the top of the window, a shortcut access bar at the bottom, a collapsible toolbox on the left, a home page in the middle, and a meta information and version update record panel on the right. When a sub-application is started, the layout will switch to the user interface, with the analysis page of the application in the middle and application details information on the right. ",-1)),E=t(()=>e("img",{src:"https://benben-miao.gitee.io/image-cloud/OmicsSuite/Paper-Figure2.jpg",style:{width:"100%","aspect-ratio":"true","border-radius":"10px"}},null,-1)),N=t(()=>e("br",null,null,-1)),J={class:"image-text-card"},$=t(()=>e("p",{class:"card-title"},"3. Sub-applications Overview:",-1)),D=t(()=>e("p",{class:"card-content"}," Bioinformatics encompasses biology (such as multi-omics) and methodology (such as statistics and advanced algorithms). Therefore, OmicsSuite continuously improves multi-omics analysis and visualization functions based on the foundation of statistical analysis, providing users with a comprehensive one-stop solution. Currently, there are 12 categories with 175 sub-applications. The categories are: Sequence, Statistics, Algorithm, Genomics, Transcriptomics, Enrichment, Proteomics, Metabolomics, Clinical, Microorganisms, Single Cell, and Table Operation. ",-1)),U=t(()=>e("img",{src:"https://benben-miao.gitee.io/image-cloud/OmicsSuite/Paper-Figure3.jpg",style:{width:"100%","aspect-ratio":"true","border-radius":"10px"}},null,-1)),L=t(()=>e("br",null,null,-1)),Y={class:"image-text-card"},K=t(()=>e("p",{class:"card-title"},"4. Omics Genomics:",-1)),Q=t(()=>e("p",{class:"card-content"}," OmicsSuite has developed four types of genome circle maps based on the Rcircos and chloroplot packages to assist users in visualizing the genome. MitoGenome (Mitochondrial Genome) can parse GenBank-formatted mitochondrial genome information and display the GC content of each gene and of pseudogene markers. ChloroplastGenome (Chloroplast Genome) provides support for displaying the GC content of inverted repeat sequences (IRA/IRB), GC content of genes, pseudogene markers, and InDel information. ",-1)),Z=t(()=>e("img",{src:"https://benben-miao.gitee.io/image-cloud/OmicsSuite/Paper-Figure4.jpg",style:{width:"100%","aspect-ratio":"true","border-radius":"10px"}},null,-1)),ee=t(()=>e("br",null,null,-1)),te={class:"image-text-card"},ie=t(()=>e("p",{class:"card-title"},"5. Omics Transcriptomics:",-1)),se=t(()=>e("p",{class:"card-content"}," VolcanoPlot and MversusA (MAplot) (combined names) can intuitively display the differentially expressed genes between paired groups. ExpressionTrends (Expression Trends) can display the linear trajectories of all genes in multiple groups, making it convenient to observe the expression trends of genes with traits. Similarly, WGCNA performs a weighted gene co-expression network analysis, taking multiple-group gene expression data as input. ",-1)),oe=t(()=>e("img",{src:"https://benben-miao.gitee.io/image-cloud/OmicsSuite/Paper-Figure5.jpg",style:{width:"100%","aspect-ratio":"true","border-radius":"10px"}},null,-1)),ae=t(()=>e("br",null,null,-1)),ne={class:"image-text-card"},le=t(()=>e("p",{class:"card-title"},"6. SingleCell Omics:",-1)),re=t(()=>e("p",{class:"card-content"}," OmicsSuite has developed a pipeline and interactive suite of 22 sub-applications for single-cell transcriptomics based on packages such as Seurat v4 and Monocle2 that provide interfaces for almost all parameters. The 10X Genomics raw data is output in Matrix format after being processed by Chromium, and the results can be read by all sub-applications and entered into the corresponding analysis steps. ",-1)),ce=t(()=>e("img",{src:"https://benben-miao.gitee.io/image-cloud/OmicsSuite/Paper-Figure6.jpg",style:{width:"100%","aspect-ratio":"true","border-radius":"10px"}},null,-1)),de=t(()=>e("br",null,null,-1));function pe(n,ue,me,he,_e,ge){const c=a("AppHeader"),d=a("el-header"),p=a("el-alert"),o=a("el-col"),l=a("el-row"),u=a("el-main"),m=a("AppFooter"),h=a("el-footer"),_=a("el-container"),g=a("el-backtop");return y(),w("div",k,[i(_,null,{default:s(()=>[i(d,null,{default:s(()=>[i(c)]),_:1}),i(u,null,{default:s(()=>[e("div",A,[e("div",null,[C,T,F,z,G,i(p,{title:"Citation: OmicsSuite",type:"warning","show-icon":"",closable:!1},{default:s(()=>[j]),_:1})]),e("div",null,[M,P,e("div",B,[i(l,{gutter:20},{default:s(()=>[i(o,{span:24,sm:8,lg:8},{default:s(()=>[I,V]),_:1}),i(o,{span:24,sm:16,lg:16},{default:s(()=>[R]),_:1})]),_:1})]),W,e("div",q,[i(l,{gutter:20},{default:s(()=>[i(o,{span:24,sm:8,lg:8},{default:s(()=>[H,X]),_:1}),i(o,{span:24,sm:16,lg:16},{default:s(()=>[E]),_:1})]),_:1})]),N,e("div",J,[i(l,{gutter:20},{default:s(()=>[i(o,{span:24,sm:8,lg:8},{default:s(()=>[$,D]),_:1}),i(o,{span:24,sm:16,lg:16},{default:s(()=>[U]),_:1})]),_:1})]),L,e("div",Y,[i(l,{gutter:20},{default:s(()=>[i(o,{span:24,sm:8,lg:8},{default:s(()=>[K,Q]),_:1}),i(o,{span:24,sm:16,lg:16},{default:s(()=>[Z]),_:1})]),_:1})]),ee,e("div",te,[i(l,{gutter:20},{default:s(()=>[i(o,{span:24,sm:8,lg:8},{default:s(()=>[ie,se]),_:1}),i(o,{span:24,sm:16,lg:16},{default:s(()=>[oe]),_:1})]),_:1})]),ae,e("div",ne,[i(l,{gutter:20},{default:s(()=>[i(o,{span:24,sm:8,lg:8},{default:s(()=>[le,re]),_:1}),i(o,{span:24,sm:16,lg:16},{default:s(()=>[ce]),_:1})]),_:1})]),de])])]),_:1}),i(h,null,{default:s(()=>[i(m)]),_:1})]),_:1}),i(g,{right:50,bottom:100})])}const Pe=f(O,[["render",pe],["__scopeId","data-v-09bf523c"]]);export{Pe as default};
